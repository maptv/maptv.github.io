---
title: Dec
author:
  - name: Martin Laptev
    url: https://maptv.github.io
image: ../asset/deidek.svg
description: >
  Introducing the Dec measurement system, which uses turns instead of months, weeks, hours, minutes, seconds, and degrees.
citation:
  url: https://maptv.github.io/dec
aliases:
  - /d
  - /de
license: CC BY-SA
lightbox: false
toc: true
toc-depth: 4
bread-crumbs: false
format:
  html:
    grid:
      body-width: 900px
    shift-heading-level-by: 3
    include-after-body:
      - ../asset/cite.html
      - ../asset/style.html
      - ../asset/stamp.html
      - ../asset/tooltip.html
  commonmark: default
filters:
  - ../asset/date.lua
---

```{mermaid}
%%| label: decnavtop
%%{init: {'theme': 'default', 'themeVariables': { 'fontSize': '32px'}}}%%
flowchart LR
   A[Dec]-->B[date]-->C[time]-->D[snap]-->E[span]
   click A "/dec"
   click B "/dec/date"
   click C "/dec/time"
   click D "/dec/snap"
   click E "/dec/span"
```

This section of my site focuses on Dec, a [measurement system](https://en.wikipedia.org/wiki/System_of_units_of_measurement#:~:text=a%20collection%20of%20units%20of%20measurement%20and%20rules%20relating%20them%20to%20each%20other) that [I](https://maptv.github.io) created to measure‚è≥time,üìçposition,üß≠orientation,üìêangles, andüîÑcycles in [turns](https://en.wikipedia.org/wiki/Turn_%28angle%29#:~:text=a%20unit%20of%20plane%20angle%20measurement%20equal%20to%202%CF%80%C2%A0radians%2C%20360%C2%A0degrees) ([$\tau$](https://en.wikipedia.org/wiki/Turn_%28angle%29#:~:text=the%20Greek%20letter,to%20one%20turn)) instead of months, weeks, hours, minutes, seconds, and degrees. For time measurement, Dec uses days and years, which are turns of a [celestial body](https://en.wikipedia.org/wiki/Astronomical_object#:~:text=a%20single%2C%20tightly%20bound%2C%20contiguous%20entity) on [its axis](https://en.wikipedia.org/wiki/Axial_tilt#:~:text=the%20imaginary%20line%20that%20passes%20through%20both%20the%20north%20pole%20and%20south%20pole) and around [the point it orbits](https://en.wikipedia.org/wiki/Barycenter_%28astronomy%29#:~:text=the%20point%20about%20which%20the%20bodies%20orbit), respectively.

The two most important components of Dec are Decalendar and Declock. In the simplest terms, Decalendar counts fractions of a year, while Declock counts fractions of a day. The denominator for Decalendar is the number of days in the year, and the Declock denominator is $10^x$, where $x$ is the number of digits in the numerator. In both systems, only the numerator, not the denominator, is provided. In the context of Decalendar, the numerator is the days that have passed in the year, while in the context of Declock, the numerator is the parts of the day that have passed in the day.

To avoid any confusion between the two, we can say [Day 5]{.underline .tool data-bs-toggle="tooltip" data-bs-title="March 6"} to mean the date when 5 days have passed this year or [Day 0]{.underline .tool data-bs-toggle="tooltip" data-bs-title="March 1"} to mean the first day-of-year ([doy]{.under .tool data-bs-toggle="tooltip" data-bs-title="day-of-year"}). This is like the use of the term "day zero" in other contexts, such as epidemiology. The analogous term for times is "Dot". The word "Dot" conveys that at its core Declock is a system built on [fractional days](https://en.wikipedia.org/wiki/Decimal_time#Fractional_days) expressed as decimal numbers. The 5 in "Dot 5" can be thought of as a number after a decimal (0.5) or a numerator (‚Åµ/‚ÇÅ‚ÇÄ), either way it means noon, the time when half the day has passed.

The analogy to decimals or fractions is important, because it explains why adding a zero at the end of a time does not change the time, only the implied tolerance of time points or the implied duration of time intervals. If Dot 5 is a time point, it has an implied tolerance of 5% of the day ($.5¬±.05$), because any time after Dot 45 and before Dot 55 ($[.45, .55)$) would round to Dot 5. On the other hand, if Dot 5 is the start time for a time interval, that interval is implied to start at Dot 5 and end before Dot 6 ($[.5, .6)$) and thus have a duration of 10% of the day (Dot 6-Dot 5). Every additional digit we add decreases the implied tolerance and the implied duration 10-fold.

If we really want to insist on punctuality, we could include up to 5 digits in a time. Specifying times with more than 5 digits is possible, and may be useful for scientific or technical purposes, but it is analogous to providing [extremely long GPS coordinates](https://xkcd.com/2170/); at some point the level of precision stops having relevance to daily life. If we want to strive for the highest level of precision possible, we can add the word "sharp" or the `#` symbol to the time. Saying "5 Sharp" or writing `5#` means as close as possible to noon. Times that include `#` cannot have an implied duration. We can only add `#` to a time, so there is no need say "Dot 5 Sharp" or write `.5#`.

# Context clues {#sec-context}

Not saying "Day" or "Dot" in general is acceptable, because it is convenient and often the numbers make perfect sense in context. If someone says "let's have lunch at 5", it is clear that they are referring to noon (`Dot` `5`) and not the sixth `doty` (`Day` `5`). Also, the number itself may provide a clue. Numbers greater than 365 could still be a `doty`, but it would represent a day in an upcoming year, not the current year. The meaning of such dates depends on whether the current year is a common year (n=365) or a leap year (n=366). Saying "500" could mean `Day` `134` (if n=366) or `Day` `135` (if n=365) of the subsequent year, but it would most likely mean noon (`Dot` `500`).

# Snaps

If a Decalender date and a Declock time are combined, they form a time `snap`. The date always goes before the time in any snap. When said together, the numbers "0" and "5" mean the first doy (Day 0) at noon (Dot 5). In written form, this would be 000.5. This format is called `.y`, which is read the same way as `doty`, but emphasizes that the `.` is used in a floating point decimal `doty`. In other words, `doty` can be used instead of "day of the year" in a sentence, whereas `.y` indicates a `stamp`, such as `000.5`. Ideally, a `stamp` will include all of the information needed to identify a singular point in time, and thus should include a year and time zone.

# Specific dates and times {#sec-specific}

The `stamp` in @sec-stamp assumes that the year and time zone are known. A date without a year is like a time without a time zone, both depend on the context. Most likely, we are talking about the current year and the local time zone, but it may be unclear. Including a year allows us to pinpoint a specific day, instead of a day that could happen any year. Similarly, a time with a time zone occurs once every day, rather than once in every time zone per day. The `Day` `306` of 1969, would be written `1969+306` and said "Year 1969 Day 306" or simply "1969 306", while midnight in `Zone` `0` would be written `.000+0` and said "Dot 0 Zone 0", "0 Zone 0", or "0 0". Combined together, this date and time form the `stamp` `1969+306.000+0`.

# Negative numbers {#sec-neg}

Every component of `Decalender` dates and `Declock` times can be negative. A negative year is before 1 BCE (Before Common Era) and a negative time zone is West of `Zone` `0`. The year is usually provided without a sign, because most people rarely discuss years before 1 BCE, but numeric time zone offset must have a sign. Negative `doties` work like [zero-based indexes](https://en.wikipedia.org/wiki/Zero-based_numbering) in [computer programming](https://en.wikipedia.org/wiki/Zero-based_numbering#Computer_programming) in that they label the days of the year from $-N$ to $-1$, where $N$ is the number of the days in the current year. The first `doty` is indexed by both $0$ and $-N$, while the last `doty` is indexed by both $-1$ and $N$.

In general, negative numbers show the number of parts that are left in the whole. A negative `doty` shows how many days remain in the year and a negative time [counts down](https://en.wikipedia.org/wiki/Countdown) to the end of the day. To extend the fractions analogy in @sec-frac to negative numbers, the negative number added to the whole gives us the numerator of the positive fraction ($pos = N + neg$). Positive and negative numbers arrive at the same answer from opposite directions.

In certain contexts, the choice of using a negative number over a positive number may mean that we want to emphasize how much time is left instead of how much has passed. Even though `Dot` `-1` and `Dot` `9` are synonymous `Declock` times, the former could highlight that there is only 1 tenth (‚Öí or .1) of the day remaining before midnight. `Dot` `5` and `Dot` `-5` both mean noon, like saying that a glass is half-empty or half-full.

The negative equivalent of `1969+306`, January 1st, 1970 in the Gregorian calendar, is `1970-059`. This negative `deco` date literally subtracts 59 days from the beginning of year 1970 to arrive at `Day` `306` of 1969. The year in negative `deco` dates is always 1 greater than the year in the equivalent positive `deco` date. Both `1969+306` and `1970-059` translate to January 1, 1970 in the Gregorian calendar. `Decalendar` years are shifted by two months in relation to the Gregorian calendar years because `Decalendar` years start on March 1.

This shift causes the Gregorian calendar year to be 1 greater than the year in the positive `deco` dates during January and February and 1 less than the year in negative `deco` dates during every other month. For example, the `Deco` dates `1969+000` and `1970-365` are March 1, 1969 in the Gregorian calendar. Immediately after midnight on this date, the negative `doty` will change from -365 to -364, while the positive `doty` will remain at 0. At noon, the positive `deco` date will be `1969+306.500` and the negative `deco` date will be `1970-058.500`.

# Units {#sec-unit}

`Declock` times often have three digits because this is the best level of precision for displaying time on clocks and watches. While 3 digits are often best, `Declock` times can have any number of digits, depending on the desired precision level. `Declock` provides names for extremely precise time units, but the most relevant units are within a few orders of magnitude from a day, which is the base unit of both `Declock` and `Decalendar`. Listing the units of each, as in @tbl-unit, highlights the relationship between the two:

```{mermaid}
%%| label: decnavbtm
%%{init: {'theme': 'default', 'themeVariables': { 'fontSize': '32px'}}}%%
flowchart LR
   A[Dec]-->B[date]-->C[time]-->D[snap]-->E[span]
   click A "/dec"
   click B "/dec/date"
   click C "/dec/time"
   click D "/dec/snap"
   click E "/dec/span"
```



```{=html}
<style>
div.cell:has(form.oi-3a86ea-toggle) {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
}
div.observablehq > div:has(form.oi-3a86ea-toggle) {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
}
div.cell:has(form.oi-3a86ea) {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
}
form.oi-3a86ea-toggle {
  max-width: 100% !important;
  --input-width: 30px;
  --label-width: 100px;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
}
form.oi-3a86ea {
  --input-width: 200px;
  padding-right: 9px;
}
form.oi-3a86ea-toggle > label {
  width: 75px;
}
form.oi-3a86ea-toggle > label[for="oi-3a86ea-2"] {
  width: 110px;
}
form.oi-3a86ea-toggle > input#oi-3a86ea-2 {
  width: 15px;
}
form.oi-3a86ea-toggle {
  width: 110px;
}
form.oi-3a86ea-toggle:has(input#oi-3a86ea-2) {
  width: 150px;
}
input.oi-3a86ea-input[type="checkbox"] {
  margin: 4px 0px 0px 0px;
}
div > form.oi-3a86ea > label {
  --label-width: 105px;
}
form.oi-3a86ea > div.oi-3a86ea-input > input[type="number"] {
  max-width: 60px;
}
div.column-page:has(svg.leftplot), div.column-page:has(svg.rightplot) {
  display: flex;
  justify-content: center;
}
div.observablehq > figure > h2 {
  text-align: center;
  font-size: 1.3rem;
  margin-bottom: -8px;
}
input[type="radio"] {
  margin: 1px 0px 0px 0px;
}
p:has(.radiotitle) {
  margin-top: -6px;
  margin-bottom: -3px;
}
#radiobuttons {
  margin-bottom: -12px;
}
h4.anchored {
  margin: 8px 0px 8px 0px;
}
#mermaid-1 {
  margin-top: 15px;
  margin-bottom: -20px;
}
div.cell-output-display:has(svg#navtop-mermaid.flowchart.mermaid-js) {
  margin-top: -5px;
  margin-bottom: -5px;
}
div.cell-output-display:has(svg#zerobasedpent-mermaid.flowchart.mermaid-js) {
  margin-top: -15px;
}
div.cell-output-display:has(svg#onebasedpent-mermaid.flowchart.mermaid-js) {
  margin-top: -5px;
  margin-bottom: -5px;
}
div.cell-output-display:has(svg#conversionchart-mermaid.flowchart.mermaid-js) {
  margin-top: -15px;
  margin-bottom: -15px;
}
div.cell-output-display:has(svg#navbtm-mermaid.flowchart.mermaid-js) {
  margin-top: -15px;
  margin-bottom: 5px;
}
span.nodeLabel > p {
  text-align: center;
}
div.hand {
  display: flex;
  flex-wrap: wrap;
}
div.hand > svg {
  margin: 5px 5px 20px 5px;
}
div.overflowequation {
  margin-top: -20px;
  margin-bottom: -20px;
}
div#leapscrubvert {
  margin-top: -10px;
}
svg.topplot {
  margin-top: -9px;
  margin-bottom: -9px;
  overflow: clip;
}
svg.btmplot {
  margin-top: -9px;
  margin-bottom: -15px;
  overflow: clip;
}
svg.leftplot {
  margin-top: -9px;
  margin-bottom: -15px;
  overflow: clip;
}
svg.rightplot {
  margin-top: -9px;
  margin-bottom: -15px;
  overflow: clip;
}
form.oi-3a86ea-checkbox {
  max-width: 800px;
}
</style>
```
