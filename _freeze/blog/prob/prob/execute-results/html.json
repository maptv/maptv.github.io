{
  "hash": "9b51ad081f09d5811452c989f07b081b",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Probability\nauthor:\n  - name: Martin Laptev\n    url: https://maptv.github.io\ndate: last-modified\ndate-format: x\nimage: horst_hist-samples.png\ncategories:\n  - ml\nformat:\n  html:\n    mermaid:\n      theme: default\n    output-file: index.html\nfilters:\n  - ../../scripts/date.lua\n  - include-code-files\n---\n\nIn this blog post I will discuss a few examples of [probability](https://en.wikipedia.org/wiki/Probability#:~:text=Probability%20is%20the%20branch%20of,event%20and%201%20indicates%20certainty.) in [machine learning](https://en.wikipedia.org/wiki/Machine_learning#:~:text=Machine%20learning%20(ML)%20is%20a%20field%20of%20study%20in%20artificial%20intelligence%20concerned%20with%20the%20development%20and%20study%20of%20statistical%20algorithms%20that%20can%20effectively%20generalize%20and%20thus%20perform%20tasks%20without%20explicit%20instructions.). If you are new to probability, I recommend one of great textbooks that cover the topic and are available for free online, such as [Think Bayes](https://allendowney.github.io/ThinkBayes2) by [Allen Downey](https://www.allendowney.com) and [Bayes Rules!](https://www.bayesrulesbook.com) by [Alicia A. Johnson](https://ajohns24.github.io), Miles Q. Ott, and [Mine Dogucu](https://www.minedogucu.com).\n\n[Classification](https://en.wikipedia.org/wiki/Statistical_classification) [algorithms](https://en.wikipedia.org/wiki/Algorithm) algorithms can estimate $n \\times k$ class membership probabilities for each dataset, where n is the number of data points in the dataset and k is the number of classes in the [training dataset](https://en.wikipedia.org/wiki/Training,_validation,_and_test_data_sets#:~:text=training%20data%20set%2C%5B3%5D%20which%20is%20a%20set%20of%20examples%20used%20to%20fit%20the%20parameters%20(e.g.%20weights%20of%20connections%20between%20neurons%20in%20artificial%20neural%20networks)%20of%20the%20model.). Similarly, the [Gaussian Mixtures](https://scikit-learn.org/stable/modules/mixture.html) [clustering](https://scikit-learn.org/stable/modules/clustering.html) algorithm can generate $n \\times k$ cluster label probabilities.\n\nBesides  a data point and the Gaussian Mixtures models can estimate cluster membership probability. point , especially [Logistic Regression](https://en.wikipedia.org/wiki/Logistic_regression) and [Naive Bayes](https://en.wikipedia.org/wiki/Naive_Bayes_classifier). Every classification algorithm can estimate probabilities of belonging to each class.\n\n$\\Huge P(A\\vert B)={\\frac {P(B\\vert A)P(A)}{P(B)}}$\n\n::: {#5a41c2e5 .cell execution_count=2}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\nfrom sklearn.decomposition import PCA\nfrom sklearn.impute import KNNImputer\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import ConfusionMatrixDisplay\nfrom sklearn.model_selection import train_test_split\n```\n:::\n\n\n::: {#395bf80e .cell execution_count=3}\n``` {.python .cell-code}\ndf = sns.load_dataset(\"penguins\")\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>species</th>\n      <th>island</th>\n      <th>bill_length_mm</th>\n      <th>bill_depth_mm</th>\n      <th>flipper_length_mm</th>\n      <th>body_mass_g</th>\n      <th>sex</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Adelie</td>\n      <td>Torgersen</td>\n      <td>39.1</td>\n      <td>18.7</td>\n      <td>181.0</td>\n      <td>3750.0</td>\n      <td>Male</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Adelie</td>\n      <td>Torgersen</td>\n      <td>39.5</td>\n      <td>17.4</td>\n      <td>186.0</td>\n      <td>3800.0</td>\n      <td>Female</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Adelie</td>\n      <td>Torgersen</td>\n      <td>40.3</td>\n      <td>18.0</td>\n      <td>195.0</td>\n      <td>3250.0</td>\n      <td>Female</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Adelie</td>\n      <td>Torgersen</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Adelie</td>\n      <td>Torgersen</td>\n      <td>36.7</td>\n      <td>19.3</td>\n      <td>193.0</td>\n      <td>3450.0</td>\n      <td>Female</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#1d30e06d .cell execution_count=4}\n``` {.python .cell-code}\ny = df[\"species\"]\nX = df.drop(\"species\", axis=1)\nX = pd.get_dummies(X, columns=[\"island\", \"sex\"])\n```\n:::\n\n\n::: {#680b1c56 .cell execution_count=5}\n``` {.python .cell-code}\nknni = KNNImputer()\ncolnames = X.columns\nX = knni.fit_transform(X)\nX = pd.DataFrame(X, columns=colnames)\n```\n:::\n\n\n::: {#7411bed8 .cell execution_count=6}\n``` {.python .cell-code}\n# https://blog.4dcu.be/programming/2021/03/19/Code-Nugget-PCA-with-loadings.html\npipeline = Pipeline([\n    (\"scaler\", StandardScaler()),\n    (\"pca\", PCA(n_components=2)),\n])\n\npca_data = pd.DataFrame(\n    pipeline.fit_transform(X),\n    columns=[\"PC1\", \"PC2\"],\n    index=df.index,\n)\npca_data[\"species\"] = df[\"species\"]\n\npca_step = pipeline.steps[1][1]\nloadings = pd.DataFrame(\n    pca_step.components_.T,\n    columns=[\"PC1\", \"PC2\"],\n    index=X.columns,\n)\n\ndef loading_plot(\n    coeff, labels, scale=1, text_x=None, text_y=None, colors=None, visible=None, ax=plt, arrow_size=0.5\n):\n    for i, label in enumerate(labels):\n        if visible is None or visible[i]:\n            ax.arrow(\n                0,\n                0,\n                coeff[i, 0] * scale,\n                coeff[i, 1] * scale,\n                head_width=arrow_size * scale,\n                head_length=arrow_size * scale,\n                color=\"#000\" if colors is None else colors[i],\n            )\n            ax.text(\n                text_x[i] if text_x.all() else coeff[i, 0] * 1.2 * scale,\n                text_y[i] if text_y.all() else coeff[i, 1] * 1.2 * scale,\n                label,\n                color=\"#000\" if colors is None else colors[i],\n                ha=\"center\",\n                va=\"center\",\n            )\n\nloadings = loadings * 3.2\n\ntext_x = loadings[\"PC1\"] * 2.4\ntext_y = loadings[\"PC2\"] * 2.4\n\ntext_y[\"sex_Male\"] -= .5\ntext_y[\"bill_depth_mm\"] -= .4\ntext_x[\"bill_depth_mm\"] -= .4\ntext_y[\"sex_Female\"] += .5\ntext_y[\"island_Torgersen\"] += .1\ntext_x[\"island_Dream\"] -= .5\ntext_y[\"island_Dream\"] -= .3\ntext_y[\"island_Biscoe\"] += .3\ntext_x[\"island_Biscoe\"] += .3\ntext_x[\"flipper_length_mm\"] += .55\ntext_x[\"body_mass_g\"] += .95\ntext_y[\"body_mass_g\"] -= .05\n\n# https://seaborn.pydata.org/generated/seaborn.jointplot.html\ng = sns.jointplot(data=pca_data, x=\"PC1\", y=\"PC2\", hue=\"species\", ratio=4, marginal_ticks=True, height=8)\ng.plot_joint(sns.kdeplot, zorder=0, levels=6)\ng.plot_marginals(sns.rugplot, height=-.025, clip_on=False)\n# Add loadings\nloading_plot(loadings[[\"PC1\", \"PC2\"]].values, loadings.index, text_x=text_x, text_y=text_y, scale=2, arrow_size=0.02)\n\n# Add variance explained by the\nplt.xlabel(f\"PC1 ({pca_step.explained_variance_ratio_[0]*100:.2f} %)\")\nplt.ylabel(f\"PC2 ({pca_step.explained_variance_ratio_[1]*100:.2f} %)\")\n\nplt.tight_layout()\nplt.savefig(\"PCA_with_loadings.png\", dpi=300)\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1119: FutureWarning:\n\nuse_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1119: FutureWarning:\n\nuse_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1119: FutureWarning:\n\nuse_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1119: FutureWarning:\n\nuse_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1119: FutureWarning:\n\nuse_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1119: FutureWarning:\n\nuse_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n\n/var/folders/0k/09bdrlmx63qf4jwt8dw7nrvc0000gn/T/ipykernel_97150/3221505183.py:36: FutureWarning:\n\nSeries.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n\n/var/folders/0k/09bdrlmx63qf4jwt8dw7nrvc0000gn/T/ipykernel_97150/3221505183.py:37: FutureWarning:\n\nSeries.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](prob_files/figure-html/cell-6-output-2.png){width=758 height=758}\n:::\n:::\n\n\n::: {#12769cfb .cell tags='[]' execution_count=7}\n``` {.python .cell-code}\nsns.displot(df, x=\"bill_length_mm\", kde=True, hue=\"species\", stat=\"count\");\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1119: FutureWarning:\n\nuse_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](prob_files/figure-html/cell-7-output-2.png){width=591 height=470}\n:::\n:::\n\n\n::: {#b133eb52 .cell tags='[]' execution_count=8}\n``` {.python .cell-code}\nsns.displot(df, x=\"bill_length_mm\", kde=True, hue=\"species\", stat=\"density\");\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1119: FutureWarning:\n\nuse_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](prob_files/figure-html/cell-8-output-2.png){width=591 height=470}\n:::\n:::\n\n\n::: {#85d3fac7 .cell tags='[]' execution_count=9}\n``` {.python .cell-code}\nsns.displot(df, x=\"bill_length_mm\", kde=True, rug=True, hue=\"species\", stat=\"proportion\");\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1119: FutureWarning:\n\nuse_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](prob_files/figure-html/cell-9-output-2.png){width=591 height=470}\n:::\n:::\n\n\n::: {#c24c838f .cell tags='[]' execution_count=10}\n``` {.python .cell-code}\nfig, axes = plt.subplots(1, 2, sharey=True)\nfig.suptitle('PDF and CDF comparision')\nsns.histplot(df[[\"bill_length_mm\", \"flipper_length_mm\"]], kde=True, ax=axes[0]);\nsns.ecdfplot(df[[\"bill_length_mm\", \"flipper_length_mm\"]], stat=\"count\", ax=axes[1], legend=False)\nplt.ylim((0, 375));\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1119: FutureWarning:\n\nuse_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n/opt/homebrew/Caskroom/mambaforge/base/envs/py/lib/python3.11/site-packages/seaborn/_oldcore.py:1119: FutureWarning:\n\nuse_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](prob_files/figure-html/cell-10-output-2.png){width=593 height=459}\n:::\n:::\n\n\n::: {#1fa60285 .cell tags='[]' execution_count=11}\n``` {.python .cell-code}\nimport pathlib\n```\n:::\n\n\n::: {#2bc96787 .cell tags='[]' execution_count=12}\n``` {.python .cell-code}\nlr = LogisticRegression(max_iter=10000)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)\nlr.fit(X_train, y_train)\ncmd = ConfusionMatrixDisplay.from_estimator(lr, X_test, y_test)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](prob_files/figure-html/cell-12-output-1.png){width=551 height=429}\n:::\n:::\n\n\n# Logistic function visualization\n\n::: {#babd7648 .cell tags='[]' execution_count=13}\n``` {.python .cell-code}\n# https://github.com/ageron/handson-ml3/blob/main/04_training_linear_models.ipynb\nlim = 6\nt = np.linspace(-lim, lim, 100)\nsig = 1 / (1 + np.exp(-t))\n\nplt.figure(figsize=(8, 3))\nplt.plot([-lim, lim], [0, 0], \"k-\")\nplt.plot([-lim, lim], [0.5, 0.5], \"k:\")\nplt.plot([-lim, lim], [1, 1], \"k:\")\nplt.plot([0, 0], [-1.1, 1.1], \"k-\")\nplt.plot(t, sig, \"b-\", linewidth=2, label=r\"$\\sigma(t) = \\dfrac{1}{1 + e^{-t}}$\")\nplt.xlabel(\"t\")\nplt.legend(loc=\"upper left\")\nplt.axis([-lim, lim, -0.1, 1.1])\nplt.gca().set_yticks([0, 0.25, 0.5, 0.75, 1])\nplt.grid()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](prob_files/figure-html/cell-13-output-1.png){width=658 height=282}\n:::\n:::\n\n\n# Obtain the logistic function mathematically\n\n## Step 1. Write out the linear regression equation\n$\\Huge y=\\beta_0+\\beta_1 x_1+...+\\beta_n x_n$\n## Step 2. The logistic regression equation is the same as above except output is log odds\n$\\Huge log(odds)=\\beta_0+\\beta_1 x_1+...+\\beta_n x_n$\n## Step 3. Exponentiate both sides of the logistic regression equation to get odds\n$\\Huge odds=e^{\\beta_0+\\beta_1 x_1+...+\\beta_n x_n}$\n## Step 4. Write out the probability equation\n$\\Huge p=\\frac{odds}{1+odds}$\n## Step 5. Plug odds (from step 3) into the probability equation\n$\\Huge p=\\frac{e^{\\beta_0+\\beta_1 x_1+...+\\beta_n x_n}}{1+e^{\\beta_0+\\beta_1 x_1+...+\\beta_n x_n}}$\n## Step 6. Divide the numerator and denominator by the odds (from step 3)\n$\\Huge p=\\frac{1}{1+e^{-(\\beta_0+\\beta_1 x_1+...+\\beta_n x_n)}}$\n\n::: {#2755ae82 .cell tags='[]' execution_count=14}\n``` {.python .cell-code}\ngnb = GaussianNB()\ngnb.fit(X_train, y_train)\ncmd = ConfusionMatrixDisplay.from_estimator(gnb, X_test, y_test)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](prob_files/figure-html/cell-14-output-1.png){width=551 height=429}\n:::\n:::\n\n\n::: {#0d53871a .cell tags='[]' execution_count=15}\n``` {.python .cell-code}\nct = pd.crosstab(df[\"species\"], df[\"body_mass_g\"] > df[\"body_mass_g\"].mean(), margins=True)\n```\n:::\n\n\n::: {#8d92e2d3 .cell tags='[]' execution_count=16}\n``` {.python .cell-code}\nct\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>body_mass_g</th>\n      <th>False</th>\n      <th>True</th>\n      <th>All</th>\n    </tr>\n    <tr>\n      <th>species</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Adelie</th>\n      <td>127</td>\n      <td>25</td>\n      <td>152</td>\n    </tr>\n    <tr>\n      <th>Chinstrap</th>\n      <td>61</td>\n      <td>7</td>\n      <td>68</td>\n    </tr>\n    <tr>\n      <th>Gentoo</th>\n      <td>7</td>\n      <td>117</td>\n      <td>124</td>\n    </tr>\n    <tr>\n      <th>All</th>\n      <td>195</td>\n      <td>149</td>\n      <td>344</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#933ef5ea .cell tags='[]' execution_count=17}\n``` {.python .cell-code}\nlikelihood = ct.iloc[0, 0] / ct.iloc[0, 2]\nlikelihood\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```\n0.8355263157894737\n```\n:::\n:::\n\n\n::: {#8ae91d70 .cell tags='[]' execution_count=18}\n``` {.python .cell-code}\nprior = ct.iloc[0, 2] / ct.iloc[3, 2]\nprior\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```\n0.4418604651162791\n```\n:::\n:::\n\n\n::: {#ed9b2208 .cell tags='[]' execution_count=19}\n``` {.python .cell-code}\nnorm =  ct.iloc[3, 0] / ct.iloc[3, 2]\nnorm\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```\n0.5668604651162791\n```\n:::\n:::\n\n\n::: {#434aa780 .cell tags='[]' execution_count=20}\n``` {.python .cell-code}\nposterior = ct.iloc[0, 0] / ct.iloc[3, 0]\nposterior\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```\n0.6512820512820513\n```\n:::\n:::\n\n\n$\\Huge P(A\\vert B)={\\frac {P(B\\vert A)P(A)}{P(B)}}$\n\n::: {#4aa5d210 .cell tags='[]' execution_count=21}\n``` {.python .cell-code}\nresult = likelihood * prior / norm\n```\n:::\n\n\n::: {#43ad82f6 .cell tags='[]' execution_count=22}\n``` {.python .cell-code}\ndf[\"body_mass_g\"] > df[\"body_mass_g\"].mean()\n```\n\n::: {.cell-output .cell-output-display execution_count=21}\n```\n0      False\n1      False\n2      False\n3      False\n4      False\n       ...  \n339    False\n340     True\n341     True\n342     True\n343     True\nName: body_mass_g, Length: 344, dtype: bool\n```\n:::\n:::\n\n\n::: {#338af519 .cell execution_count=23}\n``` {.python .cell-code}\n# gnb.fit([df[\"body_mass_g\"] > df[\"body_mass_g\"].mean()], y)\n```\n:::\n\n\n```{=html}\n<script src=\"../../scripts/time.js\"></script>\n<script>\nconst tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')\nconst tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))\n</script>\n<style>\n#title-block-header > div.quarto-title-banner.page-columns.page-full { margin: 0px; padding: 0px; }\n#title-block-header { margin: 0px; }\nmain#quarto-document-content { margin: 0px; padding: 0px; }\nul.navbar-nav.navbar-nav-scroll { -webkit-flex-direction: row; }\n#quarto-sidebar { padding: 0px; overflow-x: hidden !important; }\n#quarto-sidebar > * { padding: 0px; }\n#quarto-margin-sidebar { padding: 17px; }\ndiv.quarto-title-meta { padding-bottom: 8px; }\ng.node.clickable.flowchart-label:hover { rect.basic.label-container { stroke: green!important; stroke-width:5px!important; } }\nh2 { margin: 0px !important; }\ndiv.cell.page-columns.page-full { height: 0px !important; }\n@media only screen and (max-width: 991px) { #quarto-search { display: none !important; } #quarto-sidebar { padding: 0px 9px 0px 9px !important; } }\n@media only screen and (max-width: 767px) { div.cell.page-columns.page-full { display: none !important; } }\n</style>\n```\n\n",
    "supporting": [
      "prob_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}