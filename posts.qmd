---
listing:
  contents: posts
  sort: date
  type: default
  categories: true
page-layout: full
date: now
date-format: x
---


```{=html}
<script>
function dote2doty(days = 719468) {
    const era = Math.floor((days >= 0 ? days : days - 146096) / 146097),
        dotc = days - era * 146097,
        yotc = Math.floor((dotc - Math.floor(dotc / 1460) + Math.floor(dotc / 36524) - Math.floor(dotc / 146096)) / 365);
    return [yotc + era * 400, dotc + Math.floor(yotc / 100) - yotc * 365 - Math.floor(yotc / 4)];
}
function unix2doty(ms = 0) {
  return dote2doty(ms / 86400000 + 719468)
}
// https://howardhinnant.github.io/date_algorithms.html#days_from_civil
function doty2dote(year = 1969, doty = 0, zone = 0) {
    const cycle = Math.floor((year >= 0 ? year : year - 399) / 400),
    yote = year - cycle * 400;
    return cycle * 146097 + yote * 365 + Math.floor(yote / 4) - Math.floor(yote / 100) + doty - zone
}
function doty2deco(yearDoty = [1969, 306], zone = 0) {
    const yd = dote2doty(doty2dote(yearDoty[0], Math.floor(yearDoty[1])));
    return `${yd[0]}+${(yd[1]).toString().padStart(3, "0")}${
        yearDoty[1].toString().includes(".") ? "." + (
            (yearDoty[1] > 0) ? (yearDoty[1] - zone).toString().split(".").pop()
            : [...(yearDoty[1] - zone).toString().split(".").pop()].map(
                (e, i, a) => (i + 1 === a.length) ? 10 - e : 9 - e
            ).join("")
        ) : ""
    }`
}
function unix2deco(ms = 0) {
    return doty2deco(unix2doty(ms));
};
const nbc = document.getElementsByClassName("navbar-brand-container")
const div = document.createElement("div")
div.setAttribute("id", "deco");
nbc[0].appendChild(div)
setInterval(
  () => document.getElementById("deco").innerText = unix2deco(Date.now()).slice(0, 14), 8.64);
</script>
```