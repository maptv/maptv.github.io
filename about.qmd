---
title: ""
image: media/martin.png
about:
  template: solana
  image-shape: round
  image-width: 20em
format:
  html:
    output-file: index.html
    grid:
      body-width: 1800px
    back-to-top-navigation: false
---

Greetings! My name is Martin Laptev. <img src="media/wave.gif" width="40px"/>

I am a data scientist and software engineer with a broad scientific background that ranges from biochemistry to epidemiology. I use the JavaScript, Python, and R programming languages along with the UNIX shell to build digital deliverables such as cloud[]{.bi .bi-cloud}infrastructure, data[]{.bi .bi-bar-chart-line}dashboards, and machine[]{.bi .bi-robot}learning models.

You are currently on the[]{.bi .bi-person-circle}About page of my site. The arrow[](blog){.bi .bi-arrow-right-short}at the bottom right of this page and the pencil[](blog){.bi .bi-pencil}icon in the [navigation bar](https://en.wikipedia.org/wiki/Navigation_bar#:~:text=a%20section%20of%20a%20graphical%20user%20interface%20intended%20to%20aid%20visitors%20in%20accessing%20information) (navbar) will take you to my [Blog](blog). Similarly, the other navbar icons lead to my[]{.bi .bi-file-earmark-person}[Curriculum Vitae (CV)](cv),[]{.bi .bi-github}[GitHub](https://github.com/maptv), and[]{.bi .bi-linkedin}[LinkedIn](https://www.linkedin.com/in/maptv).

The [timestamp](https://en.wikipedia.org/wiki/Timestamp#:~:text=a%20sequence%20of%20characters%20or%20encoded%20information%20identifying%20when%20a%20certain%20event%20occurred) (\${styledDecoYear0}+\${styledDecoDate0}.\${styledDecoTime0}.\${styledTimeZone0}) in the navbar is based on Dec, a measurement system I created, which measures[]{.bi .bi-hourglass}time,[]{.bi .bi-geo}position,[]{.bi .bi-compass}orientation,[]{.bi .bi-arrow-clockwise}angles, and[]{.bi .bi-arrow-repeat}cycles in units called [turns](https://en.wikipedia.org/wiki/Turn_(angle)#:~:text=a%20unit%20of%20plane%20angle%20measurement%20equal%20to%202%CF%80%C2%A0radians%2C%20360%C2%A0degrees). Dec timestamps show the [years]{.underline data-bs-toggle="tooltip" data-bs-title="Earth’s turns around the Sun"} (\${styledDecoYear1}), [days]{.underline data-bs-toggle="tooltip" data-bs-title="Earth’s turns on its axis"} (\${styledDecoDate1}), and [fractional days](https://en.wikipedia.org/wiki/Decimal_time#Fractional_days:~:text=The%20time%20of%20day%20is%20sometimes%20represented%20as%20a%20decimal%20fraction%20of%20a%20day) (\${styledDecoTime1}) since the Dec epoch: [Year 0](https://en.wikipedia.org/wiki/ISO_8601#:~:text=year%200000%20being%20equal%20to%201%20BC){.underline data-bs-toggle="tooltip" data-bs-title="1 BCE"} [Day 0](https://howardhinnant.github.io/date_algorithms.html#civil_from_days:~:text=These%20algorithms%20internally%20assume%20that%20March%201%20is%20the%20first%20day%20of%20the%20year.){.underline data-bs-toggle="tooltip" data-bs-title="March 1"} [Dot 0](https://en.wikipedia.org/wiki/Decimal_time#Fractional_days:~:text=fraction.%20Thus%2C-,midnight%20is%200.0%20day,-%2C%20noon%20is%200.5){.underline data-bs-toggle="tooltip" data-bs-title="Midnight"}.

In addition to time, Dec uses turns for [geographic](https://en.wikipedia.org/wiki/Geographic_coordinate_system) ([longitude](https://en.wikipedia.org/wiki/Longitude#:~:text=a%20geographic%20coordinate%20that%20specifies%20the%20east%E2%80%93west%20position){.underline data-bs-toggle="tooltip" data-bs-title="Eastward turns from Meridian 0 on the Earth's surface"}, [latitude](https://en.wikipedia.org/wiki/Latitude#:~:text=a%20coordinate%20that%20specifies%20the%20north%E2%80%93south%20position){.underline data-bs-toggle="tooltip" data-bs-title="Northward turns from the Equator on the Earth's surface"}) and [celestial](https://en.wikipedia.org/wiki/Celestial_coordinate_system) ([azimuth](https://en.wikipedia.org/wiki/Horizontal_coordinate_system#:~:text=the%20angle%20of%20the%20object%20around%20the%20horizon){.underline data-bs-toggle="tooltip" data-bs-title="Eastward turns from North on the horizon"}, [altitude](https://en.wikipedia.org/wiki/Horizontal_coordinate_system#:~:text=the%20angle%20between%20the%20object%20and%20the%20observer%27s%20local%20horizon){.underline data-bs-toggle="tooltip" data-bs-title="Upward turns from the horizon"}) coordinates. Importantly, longitude is measured from [Meridian 0](https://en.wikipedia.org/wiki/162nd_meridian_west#:~:text=a%20line%20of%20longitude%20that%20extends%20from%20the%20North%20Pole%20across%20the%20Arctic%20Ocean%2C%20North%20America%2C%20the%20Pacific%20Ocean%2C%20the%20Southern%20Ocean%2C%20and%20Antarctica%20to%20the%20South%20Pole){.underline data-bs-toggle="tooltip" data-bs-title="162nd meridian west"}, determines [Dec time zones](https://observablehq.com/@dec/solar-terminator){.underline data-bs-toggle="tooltip" data-bs-title="The integer part of longitude in deciturns (tenths of a turn)"} (\${styledTimeZone1}), and can be appended to the time of day (\${styledDecoTime2}.\${styledTimeZone2}), but not to durations, e.g. the time since this webpage was loaded: \${styledTickTime}.

```{ojs}
//| echo: false
unix = {
  while(true) {
    yield Date.now();
  }
}
tick = {
  let i = 0;
  while (true) {
    yield Promises.tick(864, ++i);
  }
}
tickTime = tick % 1e5
// http://howardhinnant.github.io/date_algorithms.html#civil_from_days
function unix2dote(unix, zone) {
  return [(unix ?? Date.now()) / 86400000 + 719467.6 + (zone = zone ?? 4 - Math.round((new Date).getTimezoneOffset() / 144)) / 10, zone]
}
function dote2doty(dote = 719468, zone = 0) {
  const cykl = Math.floor((dote >= 0 ? dote : dote - 146096) / 146097), dotc = dote - cykl * 146097,
        yotc = Math.floor((dotc - Math.floor(dotc / 1460) + Math.floor(dotc / 36524) - Math.floor(dotc / 146096)) / 365);
  return [yotc + cykl * 400, dotc + Math.floor(yotc / 100) - yotc * 365 - Math.floor(yotc / 4), zone];
}
function doty2deco(year = 1969, doty = 306, zone = 0) {
  return `${year.toString().padStart(4, "0")}+${Math.floor(doty).toString().padStart(3, "0")}${String(doty % 1).slice(1, 7)}.${zone}`
}
deco = doty2deco(...dote2doty(...unix2dote(unix)))
// https://observablehq.com/@observablehq/text-color-annotations-in-markdown#textcolor
function setStyle(content, style = {}) {
  function yiq(color) {
    const {r, g, b} = d3.rgb(color);
    return (r * 299 + g * 587 + b * 114) / 1000 / 255; // returns values between 0 and 1
  }
  const {
    background,
    color = yiq(background) >= 0.6 ? "#111" : "white",
    padding = "0 1px",
    borderRadius = "4px",
    fontWeight = 900,
    fontSize = "1em",
    ...rest
  } = typeof style === "string" ? {background: style} : style;
  return htl.html`<span style=${{
    background,
    color,
    padding,
    borderRadius,
    fontWeight,
    ...rest
  }}>${content}</span>`;
}
decoYear = deco.slice(0, 4)
decoDate = deco.slice(5, 8)
decoTime = deco.slice(9, 14)
decoTimeZone = deco[15]
styledDecoYear0 = setStyle(decoYear, d3.schemePaired[10])
styledDecoYear1 = setStyle(decoYear, d3.schemePaired[10])
styledDecoDate0 = setStyle(decoDate, d3.schemePaired[1])
styledDecoDate1 = setStyle(decoDate, d3.schemePaired[1])
styledDecoTime0 = setStyle(decoTime, d3.schemePaired[2])
styledDecoTime1 = setStyle(decoTime, d3.schemePaired[2])
styledDecoTime2 = setStyle(decoTime, d3.schemePaired[2])
styledTimeZone0 = setStyle(decoTimeZone, d3.schemePaired[3])
styledTimeZone1 = setStyle(decoTimeZone, d3.schemePaired[3])
styledTimeZone2 = setStyle(decoTimeZone, d3.schemePaired[3])
styledTickTime = setStyle(tickTime, d3.schemePastel2[0])
```

```{=html}
<script src="scripts/time.js"></script>
<script>
const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
</script>
<style>
div#quarto-sidebar-glass { display: none !important; }
ul.navbar-nav.navbar-nav-scroll { -webkit-flex-direction: row !important; }
#quarto-sidebar { padding: 0px; overflow-x: hidden !important; }
#quarto-sidebar > * { padding: 0px; }
@media only screen and (max-width: 991px) { #quarto-search { display: none !important; } #quarto-sidebar { padding: 0px 9px 0px 9px !important; } }
@media only screen and (max-width: 767px) { div.cell.page-columns.page-full { display: none !important; } }
</style>
```
